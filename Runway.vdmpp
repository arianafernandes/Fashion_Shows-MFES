class Runway

types
	public String = seq of char;
	
instance variables

	/*
   * DESCRIPTION: Name of the Runway
   */	
	public  name : String := "";
	
	/*
   * DESCRIPTION: Designers who participate in the Runway (set)
   */	
	private designers: set of Designer := {};
	
	/*
   * DESCRIPTION: Number of designers
   */	
	private numberDesigners: int := card designers;
	
	/*
   * DESCRIPTION: Models who participate in the Runway (by order of show -> seq)
   */
	private models: seq of Model := [];

	/*
   * DESCRIPTION: Number of models
   */	
	private numberModels: int := 0;
	
	/*
   * DESCRIPTION: Output information of the Runway
   */	
	private output : String := "";

	/*
   * DESCRIPTION: Invariant of class Runway 
   * Name must have lenght bigger than zero
   */	
	inv len name > 0;
	
	operations
		
	/*
   * DESCRIPTION: Constructor of Runway class
   */
	public Runway : 
  							(String)
  							 ==> Runway
		Runway(nm) == (
		name := nm;
		return self
	);

	/*
   * DESCRIPTION: Returns the name of the Runway
   */
	public pure getName : () ==> String
	   getName() == return name
	post RESULT = name;

	/*
   * DESCRIPTION: Returns the models of the Runway
   */  
 public pure getModels : () ==> seq of Model
		   getModels() == return models
	post RESULT = models;

	/*
   * DESCRIPTION: Returns the designers of the Runway
   */  		   
	public pure getDesigners : () ==> set of Designer
		   getDesigners() == return designers
	post RESULT = designers;
	
	/*
   * DESCRIPTION: Returns the number of designers of the Runway
   */  
	public pure getDesignersNumber : () ==> nat
		   getDesignersNumber() == return card designers 
	post RESULT = (card designers);
		   
	/*
   * DESCRIPTION: Insert one designer in the Runway
   */  		   
	public insertDesigner : Designer ==> ()
  insertDesigner(dg) ==
  (
    designers := designers union  {dg};
  )
  pre dg not in set getDesigners()
  post dg in set getDesigners();

	/*
   * DESCRIPTION: Insert one model in the Runway
   */   
	public insertModel : Model ==> ()
  insertModel(md) ==
  (
    numberModels := numberModels + 1;
    models := models ^  [md];
  )
  pre md not in set elems getModels()
  post md  in set elems getModels();
  
	/*
   * DESCRIPTION: Returns number of models in the Runway
   */ 
  public pure getNumberModels : () ==> int
  getNumberModels() == return numberModels
  post RESULT = numberModels;
  
 	/*
   * DESCRIPTION: Returns in a string all information about the Runway
   */ 
  public printRunway: () ==> String
		printRunway() == (
		output := name^"\n";
		return output;
		)
	post RESULT = output;
  		
end Runway
