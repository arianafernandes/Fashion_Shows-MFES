class Event
	
types
	public EventName = seq of char;
	public EventDate = seq of char;
	public EventLocal = seq of char;
	public EventTime = nat;
	public EventDuration = nat;
	public EventTheme = seq of char;
	public EventGender = <Homem> | <Mulher> | <Unisexo>;
  public EventColection = <Outono_Inverno> | <Primavera_Verão>;
	public DesginerName = Designer`DesignerName;
	
instance variables
	public name : EventName;
	public date : EventDate;
	public local : EventLocal;
	public time : EventTime;
	public duration : EventDuration;
	public theme : EventTheme;
	public gender: EventGender;
	public colection: EventColection;
	--Lista de designers do evento
	private designers: set of Designer`DesignerName := {};
	private numberDesigners: nat := 0;
	
operations
	public Event : () ==> Event
	  Event() ==
	  return self;
  
  
  public Event : 
  							EventName * 
  							EventDate *
  							EventLocal *
  							EventTime *
  							EventDuration *
  							EventTheme *
  							EventGender *  
  							EventColection ==> Event
	Event(nm, dt, lc, hr , dr, tm, gr, cl) == (
		name := nm;
		date := dt;
		local := lc;
		time := hr;
		duration := dr;
		theme := tm;
		gender := gr;
		colection := cl;
		return self
	);
	
	--retorna os parametros da class event
	 public pure getName : () ==> seq of char
	   getName() == return name;
	   
	  public pure getDate : () ==> seq of char
		   getDate() == return date;
		   
		public pure getLocal : () ==> seq of char
		   getLocal() == return local;
		   
		public pure getTime : () ==> nat
		   getTime() == return time;  	   
		   
		public pure getDuration : () ==> nat
		   getDuration() == return duration;
		   
		public pure getTheme : () ==> seq of char
		   getTheme() == return theme;
		   
		public pure getGender : () ==> EventGender
		   getGender() == return gender;
		   
		public pure getColection : () ==> EventColection
		   getColection() == return colection;
		
	--Adiciona designer ao evento
	public insertDesigner : Designer`DesignerName ==> ()
  insertDesigner(designerName) ==
  (
    numberDesigners := numberDesigners + 1;
    designers := designers union { designerName };
  );
  
  --remove designer do evento
  public removeDesigner : Designer`DesignerName ==> ()
  removeDesigner(designerName) == designers := designers \ {designerName};

	--retorna nr designers do evento
  public pure getNumberDesigners : () ==> nat
  getNumberDesigners() == return numberDesigners;
  
  
  
end Event
