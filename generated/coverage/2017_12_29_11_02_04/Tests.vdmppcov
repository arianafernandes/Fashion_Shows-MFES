class Tests is subclass of MyTestCase

types
public String = seq of char;

instance variables
	private static festivals: seq of FashionFestival := [];
	private static events: seq of Event := [];
	private static designers: seq of Designer := [];
	private static models: seq of Model := [];
	private static users: seq of FashionUser := [];
	
	
operations

  public run : () ==> ()
  run() ==
  (
  	
    -- VARIABLE DECLARATIONS
  	dcl f0: FashionFestival := new FashionFestival("Porto Fashion Week", "04/05/2018", "10/05/2018", "Porto");
  	dcl f1: FashionFestival := new FashionFestival("Madrid Weekend", "26/08/2018", "30/08/2018", "Madrid");
  	dcl ev0: Event := new Event("BaixaShow", "04/05/2018", "Baixa", 12, 3,"flores", <Homem>, <Primavera_Verao>);		
 	  dcl ev1: Event := new Event("Fashion Night Out Porto", "10/06/2018","Baixa",20,2,"GeometricForms",<Unisexo>,<Primavera_Verao>);
	  dcl ev2: Event := new Event("Black Friday","12/06/2018","Vila do Conde",10,4,"Fashion Sales",<Unisexo>,<Outono_Inverno>);									
    dcl d0: Designer:= new Designer("Yves S. L.", 72, "Frances", "Paris", "Classico");
    dcl d1: Designer:= new Designer("Ralph Lauren", 69, "Frances", "Paris", "Classico");
    dcl m0: Model:= new Model("Sara Sampaio", 24, "Portuguesa", "New York");												 
    dcl m1: Model:= new Model("Claudia Schiffer",47,"Alemã","Alemanha");
 		dcl m2: Model:= new Model("Naomi Campbell",47,"Inglesa","Inglaterra");
 		dcl m3: Model:= new Model("Kate Moss",43,"Inglesa","Inglaterra");
 		dcl u0: FashionUser:= new FashionUser("Joao", 30, <Homem>);
 		dcl r0: Runway := new Runway();
 		r0.insertDesigner(d0);
 		r0.insertDesigner(d1);
 		
 		festivals := festivals ^ [f0];
 		festivals := festivals ^ [f1];
 		events := events ^ [ev0];
 		events := events ^ [ev1];
 		events := events ^ [ev2];
 		designers := designers ^ [d0];
 		designers := designers ^ [d1];
 		models := models ^ [m0];
 		models := models ^ [m1];
 		models := models ^ [m2];
 		models := models ^ [m3];
 		users := users ^ [u0];
 		
 		
    -- EXECUTE testInit()
    IO`print("TestEvent.vdmpp (1/10): testInit() started...\n");
    assertNotNull(f0);
     assertNotNull(f1);
    assertNotNull(ev0);
    assertNotNull(ev1);
    assertNotNull(ev2);
    assertNotNull(d0);
    assertNotNull(d1);
    assertNotNull(ev2);
    assertNotNull(m0);
    assertNotNull(m1);
    assertNotNull(m2);
    assertNotNull(m3);
    assertNotNull(u0);
     
    -- EXECUTE Fashion Festival 
    -- EXECUTE testParams()
    IO`print("TestFashionFestival.vdmpp (2/10): testParamsFestival() started...\n");
    assertEqual("Porto Fashion Week", f0.getName());
    assertEqual("04/05/2018", f0.getDateBegin());
    assertEqual("10/05/2018", f0.getDateEnd());
    assertEqual("Porto", f0.getLocal());
	  
	  -- EXECUTE testInsertEventAtFestival()
    IO`print("TestFashionFestival.vdmpp (3/10): testInsertEventAtFestival() started...\n");
    f0.insertEvent(ev0);
    f0.insertEvent(ev2);
    f1.insertEvent(ev1);
    
		assertEqual(2,f0.getNumberEvents());
		assertEqual(ev0.getName(),((f0.getEvents() (2)).getName()));
		assertEqual(1,f1.getNumberEvents());
		assertEqual(ev1.getName(),((f1.getEvents() (1)).getName()));
    
    -- EXECUTE testEventParams()
    IO`print("TestEvent.vdmpp (3/10): testEventParams() started...\n");
    assertEqual("BaixaShow", ev0.getName());
    assertEqual("04/05/2018", ev0.getDate());
    assertEqual("Baixa", ev0.getLocal());
    assertEqual(12, ev0.getTime());
    assertEqual(3, ev0.getDuration());
    assertEqual("flores", ev0.getTheme());
    assertEqual(<Homem>, ev0.getGender());
    assertEqual(<Primavera_Verao>, ev0.getCollection());  
    
    -- EXECUTE testInsertDesignerAtEvent()
    IO`print("TestEvent.vdmpp (4/10): testInsertDesignerAtEvent() started...\n");
    ev0.insertDesigner(d0);
    ev1.insertDesigner(d1);
    assertEqual(1,ev0.getNumberDesigners());
    assertEqual(d0.getName(),(ev0.getDesigners() (1)).getName());
    assertEqual(1,ev1.getNumberDesigners());
    assertEqual(d1.getName(),(ev1.getDesigners() (1)).getName());
    
     -- EXECUTE testInsertModelAtEvent()
    IO`print("TestEvent.vdmpp (3/10): testInsertModelAtEvent() started...\n");
    ev0.insertModel(m0);
    ev0.insertModel(m1);
    ev1.insertModel(m1);
    ev1.insertModel(m2);
    ev2.insertModel(m3);
    assertEqual(2,ev0.getNumberModels());
    assertEqual(m0.getName(),(ev0.getModels() (1)).getName());
    assertEqual(m1.getName(),(ev0.getModels() (2)).getName());
    assertEqual(2,ev1.getNumberModels());
    assertEqual(m1.getName(),(ev1.getModels() (1)).getName());
    assertEqual(m2.getName(),(ev1.getModels() (2)).getName());
    assertEqual(1,ev2.getNumberModels());
    assertEqual(m3.getName(),(ev2.getModels() (1)).getName());
    
    --DESIGNER
    -- EXECUTE testParams()
    IO`print("TestDesigner.vdmpp (2/10): DesignerParams() started...\n");
    assertEqual("Yves S. L.", d0.getName());
    assertEqual(72, d0.getAge());    
    assertEqual("Frances", d0.getNationality()); 
    assertEqual("Paris", d0.getAddress()); 
    assertEqual("Classico", d0.getStyle()); 
    
    --MODEL
    -- EXECUTE testParams()
    IO`print("TestModel.vdmpp (2/10): ModelParams() started...\n");
    assertEqual("Sara Sampaio", m0.getName());
    assertEqual(24, m0.getAge());    
    assertEqual("Portuguesa", m0.getNationality()); 
    assertEqual("New York", m0.getAddress()); 
    
    --USER
    -- EXECUTE testParams()
    IO`print("TestFashionUser.vdmpp (2/10): UserParams() started...\n");
    assertEqual("Joao", u0.getName());
    assertEqual(30, u0.getAge());    
    assertEqual(<Homem>, u0.getGender());
    
      -- EXECUTE InsertFavoriteDesginer()
     IO`print("TestFashionUser.vdmpp (2/10): InsertFavoriteDesginer() started...\n");
     u0.insertDesigner(d0);
     u0.insertDesigner(d1);
     assertEqual(2,u0.getNumberFavDesigners());
     assertEqual(d0.getName(), (u0.getDesigners() (1)).getName());    
     assertEqual(d1.getName(), (u0.getDesigners() (2)).getName());    
     
      -- EXECUTE UserEvents()
     IO`print("TestFashionUser.vdmpp (2/10): UserEvents() started...\n");
     u0.insertEvent(ev0);
     u0.insertEvent(ev1);
     assertEqual(2,u0.getNumberEvents());
     assertEqual(ev0.getName(), (u0.getEvents() (1)).getName());    
     assertEqual(ev1.getName(), (u0.getEvents() (2)).getName());    
     
    -- PRINT SUCCESS MESSAGE
    IO`print("TestFashionFestival.vdmpp (DONE): all tests successfully executed!\n");
  );
  
  public  static getFestivals : () ==> seq of FashionFestival
  getFestivals() == return festivals;
  
  public  static getEvents : () ==> seq of Event
  getEvents() == return events;
  
  public  static getDesigners : () ==> seq of Designer
  getDesigners() == return designers;
   
	public  static getModels : () ==> seq of Model
  getModels() == return models;
  
  public  static getUsers : () ==> seq of FashionUser
  getUsers() == return users;
  
end Tests