class FashionUser

types
	public String = seq of char;
	
instance variables
	private username: String;
	private password: String;
	public name: String;
	public age: String;
	--designers favoritos
	private  designers: seq of Designer := [];
	private  numberDesigners: int := 0;
  --modelos favoritos
	private  models: seq of Model := [];
	private  numberModels: int := 0;
	--eventos que utilizador vai
	private events: seq of Event := [];
	private  numberEvents: int := 0;
	private output : String := "";
	
	inv len username > 0 and len password = 6 and len name > 0 and len age > 0;


operations  
  public FashionUser : String *
  										String *
  										String *
  										String  ==> FashionUser
  FashionUser(u, p, nm, ag) ==
  (
  	username := u;
  	password := p;
    name := nm;
    age := ag;
    return self;
  );
  
  --retorna os parametros da class fashionUSer
  public pure getUsername : () ==> String
	   getUsername() == return username
	   post RESULT = username;
	   
  public pure getPassword : () ==> String
	   getPassword() == return password
 		 post RESULT = password;
  
	 public pure getName : () ==> String
	   getName() == return name
	   post RESULT = name;
	   
	 public pure getAge : () ==> String
		getAge() == return age
		post RESULT = age;   
  
	  
	   --DESIGNERES FAVORITOS  
	  --Adiciona designer favorito ao utilizador
		public insertDesigner : Designer ==> ()
	  insertDesigner(d) ==
	  (
	    if d not in set elems designers 
	    then(
	     designers := designers ^ [d];
	     numberDesigners := numberDesigners + 1;)
	     else
	      IO`print("Impossivel adicionar designer ao utilizador");
	   )
	  pre d not in set elems designers
	  post d in set elems designers;
	  
		--retorna nr designers favoritos
	  public pure getNumberFavDesigners : () ==> nat
	  getNumberFavDesigners() == return numberDesigners
	  post RESULT = numberDesigners;
	   
	  public getDesigners: () ==> seq of Designer
	  getDesigners() == return designers
	  post RESULT = designers;
	  
	  public insertModel : Model ==> ()
	  insertModel(d) ==
	  (
	  	if d not in set elems models 
	    then(
	    numberModels := numberModels + 1;
	    models := models ^ [d];)
	    else
	    IO`print("Impossivel adicionar modelo ao utilizador");
	  )
	  pre d not in set elems models
	  post d in set elems models;
	  
		--retorna nr designers favoritos
	  public pure getNumberFavModels : () ==> nat
	  getNumberFavModels() == return numberModels
	  post RESULT = numberModels;
	  
	  public getModels: () ==> seq of Model
	  getModels() == return models
	   post RESULT = models;
	  
	   --EVENTOS DO UTILIZADOR
	   --Adiciona evento
		public insertEvent : Event ==> ()
	  insertEvent(ev) ==
	  (
	   if ev not in set elems events
	    then(
	    numberEvents := numberEvents + 1;
	    events := events ^ [ev];)
	    else 
	    IO`print("Impossivel adicionar evento ao utilizador");
	  )
	  pre ev not in set elems events
	  post ev in set elems events;
	  
	  
		--Retorna nr designers favoritos
	  public pure getNumberEvents : () ==> nat
	  getNumberEvents() == return numberEvents
		post RESULT = numberEvents;
		

 		public getEvents: () ==> seq of Event
	  getEvents() == return events
	  post RESULT = events;
	  
	  public printUser: () ==> String
		printUser() == (
		output := "Username: "^username^"\n"
							^"Password: "^password^"\n"
							^"Name: "^name^"\n"
							^"Age: "^age^"\n";
		return output;
		)
 		post RESULT = output;
 		
end FashionUser
